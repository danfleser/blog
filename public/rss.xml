<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Dev vlog</title>
        <link>https://danfleser.com</link>
        <description>undefined</description>
        <lastBuildDate>Sun, 23 Jan 2022 03:47:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en-US</language>
        <copyright>Copyright © 2022 Dan Fleser</copyright>
        <item>
            <title><![CDATA[test]]></title>
            <link>https://danfleser.composts/20220123000837-test</link>
            <guid>20220123000837-test</guid>
            <pubDate>Sat, 22 Jan 2022 22:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[test 2 de boss]]></title>
            <link>https://danfleser.composts/20220123000842-test-2-de-boss</link>
            <guid>20220123000842-test-2-de-boss</guid>
            <pubDate>Sat, 22 Jan 2022 22:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[How I made my static blog with Next.js and React using Markdown files]]></title>
            <link>https://danfleser.composts/20220122191731-demo-post</link>
            <guid>20220122191731-demo-post</guid>
            <pubDate>Fri, 21 Jan 2022 22:00:00 GMT</pubDate>
            <content:encoded><![CDATA[
In this tutorial we’ll be building a blog using React and Next.js.

Each post of this blog is written in markdown file.

Starting this blog from scratch was a great learning experience and didn't take too long to build(2 days).

Let’s get started by creating a new Next.js application:

    npx create-next-app next-md-blog

We’ll also need a couple of dependencies so let’s go ahead and install those as well:

    npm install gray-matter marked

- `gray-matter` – Parses front-matter from markdown files.
- `marked` – Compiles markdown into HTML.

Next let’s create a layout component that’ll load a global header and footer as is common practice when building a blog or websites in general. Create a new `components` folder with a `Layout.js`, `Header.js` and `Footer.js` files.

`components/Layout.js`

```jsx
export default function Header() {
  return (
    <header className="app-header">
      <div className="app-container">
        <div className="content">
          <Link href="/" passHref>
            <h2 className="logo">Dev blog</h2>
          </Link>
        </div>
      </div>
    </header>
  );
}
```

`components/Header.js`
xxx

`components/Footer.js`
xxx

Next let’s create a sample markdown file for a blog post. This along with all subsequent blog post markdown files will need to be saved inside a new `posts` folder.

`posts/hello-world.md`
xxx

The images folder for the thumbnails should be located within the `public` folder in the root of the application.

Create a couple more files like this and then we’re ready to create a `Post.js` component that’ll display a preview for each of blog posts on the homepage.

`components/Post.js`
xxx

Now we parse the static markdown file(title, excerpt, create data, thumbnail), loop over them and display post previews.

Now to start pulling everything together by updating the `pages/index.js` file as follows:

Now all that’s left it to create the file to display the individual blog posts.

`pages/blog/[slug].js`
xxx

You should now have a functioning blog using Next.js which you can easily add new posts using markdown files.
]]></content:encoded>
        </item>
    </channel>
</rss>