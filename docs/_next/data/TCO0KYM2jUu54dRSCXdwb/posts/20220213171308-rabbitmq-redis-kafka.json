{"pageProps":{"frontmatter":{"title":"RabbitMQ vs Redis vs Kafka","date":"2022-02-13T17:13:08.664Z","tags":["#backend"],"description":"When using asynchronous communication for Microservices, it is common to use a message broker. A broker ensures communication between different microservices is reliable and stable, that the messages are managed and monitored within the system and that messages don’t get lost.","cover_image":"20220213171308-rabbitmq-redis-kafka.jpg","readingTime":1},"slug":"20220213171308-rabbitmq-redis-kafka","post":{"content":{"compiledSource":"var p=Object.defineProperty,g=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var i=(e,n,a)=>n in e?p(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,o=(e,n)=>{for(var a in n||(n={}))r.call(n,a)&&i(e,a,n[a]);if(s)for(var a of s(n))l.call(n,a)&&i(e,a,n[a]);return e},m=(e,n)=>g(e,c(n));var u=(e,n)=>{var a={};for(var t in e)r.call(e,t)&&n.indexOf(t)<0&&(a[t]=e[t]);if(e!=null&&s)for(var t of s(e))n.indexOf(t)<0&&l.call(e,t)&&(a[t]=e[t]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var t=a,{components:e}=t,n=u(t,[\"components\"]);return mdx(MDXLayout,m(o(o({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"You should consider a few things:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Broker Scale \\u2014 The number of messages sent per second in the system.\"),mdx(\"li\",{parentName:\"ul\"},\"Data Persistency \\u2014 The ability to recover messages.\"),mdx(\"li\",{parentName:\"ul\"},\"Consumer Capability \\u2014 Whether the broker is capable of managing one-to-one and/or one-to-many consumers.\")),mdx(\"h1\",null,\"RabbitMQ (AMQP)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Scale\"),\": based on configuration and resources, the ballpark here is around 50K msg per second.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Persistency\"),\": both persistent and transient messages are supported.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"One-to-one\"),\" vs \",mdx(\"strong\",{parentName:\"li\"},\"one-to-many consumers\"),\": both.\")),mdx(\"h1\",null,\"Kafka\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Scale\"),\": can send up to a million messages per second.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Persistency\"),\": yes.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"One-to-one\"),\" vs \",mdx(\"strong\",{parentName:\"li\"},\"one-to-many consumers\"),\": only one-to-many.\")),mdx(\"h1\",null,\"Redis\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Scale\"),\": can send up to a million messages per second.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Persistency\"),\": basically, no \\u2014 it\\u2019s an in-memory datastore.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"One-to-one\"),\" vs \",mdx(\"strong\",{parentName:\"li\"},\"one-to-many consumers\"),\": both.\")),mdx(\"h1\",null,\"Use Cases\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Short-lived Messages: Redis\"),mdx(\"li\",{parentName:\"ul\"},\"Large Amounts of Data: Kafka\"),mdx(\"li\",{parentName:\"ul\"},\"Complex Routing: RabbitMQ\")))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"previousPost":{"slug":"20220213165126-learn-react-in-5-min","frontmatter":{"title":"Learn React JS in 7 minutes — Beginners Tutorial","date":"2022-02-13T16:51:26.666Z","tags":["#react","#tutorial"],"description":"After reading this article, you should be able to start coding React apps given that you’re comfortable with Javascript.","cover_image":"20220213165126-learn-react-in-5-min.jpg","readingTime":5},"content":{"compiledSource":"var h=Object.defineProperty,c=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var p=(e,t,n)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,o=(e,t)=>{for(var n in t||(t={}))i.call(t,n)&&p(e,n,t[n]);if(s)for(var n of s(t))r.call(t,n)&&p(e,n,t[n]);return e},l=(e,t)=>c(e,m(t));var d=(e,t)=>{var n={};for(var a in e)i.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&s)for(var a of s(e))t.indexOf(a)<0&&r.call(e,a)&&(n[a]=e[a]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var a=n,{components:e}=a,t=d(a,[\"components\"]);return mdx(MDXLayout,l(o(o({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Get you started with the popular JavaScript library in just a few minutes.\"),mdx(\"p\",null,\"When getting started with React, you should use the simplest setup possible: an HTML file which imports the \",mdx(\"inlineCode\",{parentName:\"p\"},\"React\"),\" and the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ReactDOM\"),\" libraries using script tags.\"),mdx(\"p\",null,\"It looks like this:\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`<html>\n  <head>\n    <script src=\"https://unpkg.com/react@16/umd/react.development.js\"><\\/script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\"><\\/script>\n    <script src=\"https://unpkg.com/babel-standalone@6.15.0/babel.min.js\"><\\/script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"text/babel\">REACT_CODE<\\/script>\n  </body>\n</html>\n`)),mdx(\"p\",null,\"We\\u2019ve also imported Babel, as React uses something called JSX to write markup. We\\u2019ll need to transform the JSX into plain JavaScript, so that the browser can understand it.\"),mdx(\"p\",null,\"There are more two things I want you to notice:\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(\"inlineCode\",{parentName:\"li\"},\"<div>\"),\" with the id of \",mdx(\"inlineCode\",{parentName:\"li\"},\"#root\"),\". This is the entry point for our app. This is where our entire app will live.\"),mdx(\"li\",{parentName:\"ol\"},\"The \",mdx(\"inlineCode\",{parentName:\"li\"},'<script type=\"text/babel\">'),\" tag in the body. This is where we\\u2019ll write our React code.\")),mdx(\"h1\",null,\"Components\"),mdx(\"p\",null,\"Everything in React is a component, and these usually take the form of JavaScript classes. You create a component by extending upon the \",mdx(\"inlineCode\",{parentName:\"p\"},\"React-Component\"),\" class. Let\\u2019s create a component called \",mdx(\"inlineCode\",{parentName:\"p\"},\"Hello\"),\":\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`class Hello extends React.Component {\n  render() {\n    return <h1>Hello world!</h1>;\n  }\n}\n`)),mdx(\"p\",null,\"You then define the methods for the component. In our example, we only have one method, and it\\u2019s called \",mdx(\"inlineCode\",{parentName:\"p\"},\"render()\"),\".\"),mdx(\"p\",null,\"Inside \",mdx(\"inlineCode\",{parentName:\"p\"},\"render()\"),\" you\\u2019ll return a description of what you want React to draw on the page. In the case above, we simply want it to display an \",mdx(\"inlineCode\",{parentName:\"p\"},\"h1\"),\" tag with the text \",mdx(\"em\",{parentName:\"p\"},\"Hello world!\"),\" inside it.\"),mdx(\"p\",null,\"To get our tiny application to render on the screen, we also have to use \",mdx(\"inlineCode\",{parentName:\"p\"},\"ReactDOM.render()\"),\":\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`ReactDOM.render(<Hello />, document.getElementById(\"root\"));\n`)),mdx(\"p\",null,\"So this is where we connect our \",mdx(\"inlineCode\",{parentName:\"p\"},\"Hello\"),\" component with the entry point for the app (\",mdx(\"inlineCode\",{parentName:\"p\"},'<div id=\"root\"></div>'),\").\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},mdx(\"em\",{parentName:\"p\"},\"So we\\u2019re simply saying:\"),\" Hey React! Please render the \",mdx(\"strong\",{parentName:\"p\"},\"Hello\"),\" component inside the DOM node with an id of \",mdx(\"strong\",{parentName:\"p\"},\"root\"),\"!\")),mdx(\"h1\",null,\"Handling data\"),mdx(\"p\",null,\"There are two types of data in React: \",mdx(\"strong\",{parentName:\"p\"},\"props\"),\" and \",mdx(\"strong\",{parentName:\"p\"},\"state\"),\". The difference between the two is a bit tricky to understand in the beginning, so don\\u2019t worry if you find it a bit confusing. It\\u2019ll become easier once you start working with them.\"),mdx(\"p\",null,\"The key difference is that the \",mdx(\"strong\",{parentName:\"p\"},\"state\"),\" is private and can be changed from within the component itself. \",mdx(\"strong\",{parentName:\"p\"},\"Props\"),\" are external, and not controlled by the component itself. It\\u2019s passed down from components higher up the hierarchy, who also control the data.\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"A component can change its internal state directly. It can not change its props directly.\")),mdx(\"p\",null,\"Let\\u2019s take a closer look at props first.\"),mdx(\"h1\",null,\"Props\"),mdx(\"p\",null,\"Our \",mdx(\"inlineCode\",{parentName:\"p\"},\"Hello\"),\" component is completely static. It renders out the same message no matter what. However, a big part of React is reusability, meaning the ability to write a component once, and then reuse it in different use cases. For example to display different messages.\"),mdx(\"p\",null,\"To achieve this type of reusability, we\\u2019ll add props. This is how you pass props to a component:\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`ReactDOM.render(\n    <Hello **message=\"my friend\"** />,\n    document.getElementById(\"root\")\n);\n`)),mdx(\"p\",null,\"This prop is called \",mdx(\"inlineCode\",{parentName:\"p\"},\"message\"),\" and has the value \\u201Cmy friend\\u201D. We can access this prop inside the Hello component by referencing \",mdx(\"inlineCode\",{parentName:\"p\"},\"this.props.message\"),\", like this:\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`class Hello extends React.Component {\n    render() {\n        return <h1>Hello {**this.props.message**}!</h1>;\n    }\n}\n`)),mdx(\"p\",null,\"The reason we\\u2019re writing \",mdx(\"inlineCode\",{parentName:\"p\"},\"{this.props.message}\"),\" with curly braces is because we need to tell the JSX that we want to add a JavaScript expression. This is called \",mdx(\"strong\",{parentName:\"p\"},\"escaping\"),mdx(\"em\",{parentName:\"p\"},\".\")),mdx(\"p\",null,\"However, what if we want the component to be able to change its own data? Then we have to use state instead!\"),mdx(\"h1\",null,\"State\"),mdx(\"p\",null,\"Unlike props \\u2014 which can\\u2019t be changed directly by the component \\u2014 the state can.\"),mdx(\"p\",null,\"So if you want the data in your app to change \\u2014 for example based on user interactions \\u2014 it must be stored in a component\\u2019s state somewhere in the app.\"),mdx(\"h2\",null,\"Initializing state\"),mdx(\"p\",null,\"To initialize the state, simply set \",mdx(\"inlineCode\",{parentName:\"p\"},\"this.state\"),\" in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"constructor()\"),\" method of the class. Our state is an object which in our case only has one key called \",mdx(\"inlineCode\",{parentName:\"p\"},\"message\"),\".\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`class Hello extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \"my friend (from state)!\",\n    };\n  }\n\n  render() {\n    return <h1>Hello {this.state.message}!</h1>;\n  }\n}\n`)),mdx(\"p\",null,\"Before we set the state, we have to call \",mdx(\"inlineCode\",{parentName:\"p\"},\"super()\"),\" in the constructor. This is because \",mdx(\"inlineCode\",{parentName:\"p\"},\"this\"),\" is uninitialized before \",mdx(\"inlineCode\",{parentName:\"p\"},\"super()\"),\" has been called.\"),mdx(\"h2\",null,\"Changing the state\"),mdx(\"p\",null,\"To modify the state, simply call \",mdx(\"strong\",{parentName:\"p\"},\"this.setState(),\"),\" passing in the new state object as the argument. We\\u2019ll do this inside a method which we\\u2019ll call \",mdx(\"inlineCode\",{parentName:\"p\"},\"updateMessage\"),\".\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`class Hello extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            message: \"my friend (from state)!\"\n        };\n        **this.updateMessage = this.updateMessage.bind(this);**   }    **updateMessage() {\n        this.setState({\n            message: \"my friend (from changed state)!\"\n        });\n    }**    render() {\n        return <h1>Hello {this.state.message}!</h1>;\n    }\n\n}\n`)),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"Note: To make this work, we also had to bind the \",mdx(\"inlineCode\",{parentName:\"p\"},\"this\"),\" keyword to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"updateMessage\"),\" method. Otherwise we couldn\\u2019t have accessed \",mdx(\"inlineCode\",{parentName:\"p\"},\"this\"),\" in the method.\")),mdx(\"h1\",null,\"Event Handlers\"),mdx(\"p\",null,\"The next step is to create a button to click on, so that we can trigger the \",mdx(\"inlineCode\",{parentName:\"p\"},\"updateMessage()\"),\" method.\"),mdx(\"p\",null,\"So let\\u2019s add a button to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"render()\"),\" method:\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`render() {\n    return (\n\n    <div>\n        <h1>Hello {this.state.message}!</h1>\n        <button onClick={this.updateMessage}>Click me!</button>\n    </div>\n    )\n}\n`)),mdx(\"p\",null,\"Here, we\\u2019re hooking an event listener onto the button, listening for the \",mdx(\"strong\",{parentName:\"p\"},\"onClick\"),\" event. When this is triggered, we call the \",mdx(\"strong\",{parentName:\"p\"},\"updateMessage\"),\" method.\"),mdx(\"p\",null,\"Here\\u2019s the entire component:\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-jsx\"}),`class Hello extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \"my friend (from state)!\",\n    };\n    this.updateMessage = this.updateMessage.bind(this);\n  }\n\n  updateMessage() {\n    this.setState({\n      message: \"my friend (from changed state)!\",\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello {this.state.message}!</h1>\n        <button onClick={this.updateMessage}>Click me!</button>\n      </div>\n    );\n  }\n}\n`)),mdx(\"p\",null,\"The \",mdx(\"strong\",{parentName:\"p\"},\"updateMessage\"),\" method then calls \",mdx(\"strong\",{parentName:\"p\"},\"this.setState()\"),\" which changes the \",mdx(\"inlineCode\",{parentName:\"p\"},\"this.state.message\"),\" value.\"),mdx(\"p\",null,\"Congrats! You now have a very basic understanding of the most important concepts in React.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"nextPost":{"slug":"20220215200104-programmer-jokes-feb-2022","frontmatter":{"title":"Best Programming Jokes February 2022","date":"2022-02-15T20:01:04.612Z","tags":["#jokes"],"description":"In this post, we have collected a handful of jokes, that have been floating around the Web, which showcase a programmer’s sense of humor. Don’t worry if you don’t get all of them — just get a programmer to explain it to you.","cover_image":"20220215200104-programmer-jokes-feb-2022.jpg","readingTime":2},"content":{"compiledSource":"var l=Object.defineProperty,c=Object.defineProperties;var p=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var h=(e,i,t)=>i in e?l(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t,g=(e,i)=>{for(var t in i||(i={}))o.call(i,t)&&h(e,t,i[t]);if(a)for(var t of a(i))r.call(i,t)&&h(e,t,i[t]);return e},m=(e,i)=>c(e,p(i));var n=(e,i)=>{var t={};for(var s in e)o.call(e,s)&&i.indexOf(s)<0&&(t[s]=e[s]);if(e!=null&&a)for(var s of a(e))i.indexOf(s)<0&&r.call(e,s)&&(t[s]=e[s]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:e}=s,i=n(s,[\"components\"]);return mdx(MDXLayout,m(g(g({},layoutProps),i),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"0\",\".\",\" Idea of a Perfect Date\"),mdx(\"img\",{src:\"/images/20220215200104/1.jpeg\",alt:\"Idea of a Perfect Date\"}),mdx(\"h1\",null,\"1\",\".\",\" This website doesn\\u2019t use cookies\"),mdx(\"img\",{src:\"/images/20220215200104/2.jpeg\",alt:\"This website doesn\\u2019t use cookies\"}),mdx(\"h1\",null,\"2\",\".\",\" Behind the scenes\"),mdx(\"img\",{src:\"/images/20220215200104/3.jpeg\",alt:\"Behind the scenes\"}),mdx(\"h1\",null,\"3\",\".\",\" I don\\u2019t know what to do\"),mdx(\"img\",{src:\"/images/20220215200104/4.jpeg\",alt:\"I don\\u2019t know what to do\"}),mdx(\"h1\",null,\"4\",\".\",\" Finding a big problem while solving small ones\"),mdx(\"img\",{src:\"/images/20220215200104/5.jpeg\",alt:\"Finding a big problem while solving small ones\"}),mdx(\"h1\",null,\"5\",\".\",\" Maybe it doesn\\u2019t want to listen to me\"),mdx(\"img\",{src:\"/images/20220215200104/6.jpeg\",alt:\"Maybe it doesn\\u2019t want to listen to me\"}),mdx(\"h1\",null,\"6\",\".\",\" A serious crime\"),mdx(\"img\",{src:\"/images/20220215200104/7.jpeg\",alt:\"A serious crime\"}),mdx(\"h1\",null,\"7\",\".\",\" Oops! Something went wrong\"),mdx(\"img\",{src:\"/images/20220215200104/8.jpeg\",alt:\"Oops! Something went wrong\"}),mdx(\"h1\",null,\"8\",\".\",\" When you date a programmer\"),mdx(\"img\",{src:\"/images/20220215200104/9.jpeg\",alt:\"When you date a programmer\"}),mdx(\"h1\",null,\"9\",\".\",\" Blame Game\"),mdx(\"img\",{src:\"/images/20220215200104/10.jpeg\",alt:\"Blame Game\"}),mdx(\"h1\",null,\"10\",\".\",\" Every single time. Ctrl S Ctrl S\"),mdx(\"img\",{src:\"/images/20220215200104/11.jpeg\",alt:\"Every single time. Ctrl S Ctrl S\"}),mdx(\"h1\",null,\"11\",\".\",\" When you are serving notice period\"),mdx(\"img\",{src:\"/images/20220215200104/12.jpeg\",alt:\"When you are serving notice period\"}),mdx(\"h1\",null,\"12\",\".\",\" You gonna regret it later\"),mdx(\"img\",{src:\"/images/20220215200104/13.jpeg\",alt:\"You gonna regret it later\"}),mdx(\"h1\",null,\"13\",\".\",\" The ultimate excuse that works every time\"),mdx(\"img\",{src:\"/images/20220215200104/14.jpeg\",alt:\"The ultimate excuse that works every time\"}),mdx(\"h1\",null,\"14\",\".\",\" Strong security policy, seriously?\"),mdx(\"img\",{src:\"/images/20220215200104/15.jpeg\",alt:\"Strong security policy, seriously?\"}),mdx(\"h1\",null,\"15\",\".\",\" Hell for the developers\"),mdx(\"img\",{src:\"/images/20220215200104/16.jpeg\",alt:\"Hell for the developers\"}),mdx(\"h1\",null,\"16\",\".\",\" Oh No.\"),mdx(\"img\",{src:\"/images/20220215200104/17.jpeg\",alt:\"Oh No.\"}),mdx(\"h1\",null,\"17\",\".\",\" What!?\"),mdx(\"img\",{src:\"/images/20220215200104/18.jpeg\",alt:\"What!?\"}),mdx(\"h1\",null,\"18\",\".\",\" Sending a Mail\"),mdx(\"img\",{src:\"/images/20220215200104/19.jpeg\",alt:\"Sending a Mail\"}),mdx(\"h1\",null,\"19\",\".\",\" An honest interview\"),mdx(\"img\",{src:\"/images/20220215200104/20.jpeg\",alt:\"An honest interview\"}),mdx(\"h1\",null,\"20\",\".\",\" Developer\\u2019s Life in a Nutshell\"),mdx(\"img\",{src:\"/images/20220215200104/21.jpeg\",alt:\"Developer\\u2019s Life in a Nutshell\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}}}},"__N_SSG":true}